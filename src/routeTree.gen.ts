/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as HelloRouteImport } from './routes/hello'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DemoIndexRouteImport } from './routes/demo/index'
import { Route as DemoTanstackQueryRouteImport } from './routes/demo/tanstack-query'
import { Route as AuthenticatedUserlistRouteImport } from './routes/_authenticated/userlist'
import { Route as AuthenticatedDashboardRouteImport } from './routes/_authenticated/dashboard'
import { Route as AuthenticatedAboutformRouteImport } from './routes/_authenticated/aboutform'
import { Route as authRegisterRouteImport } from './routes/(auth)/register'
import { Route as authLoginRouteImport } from './routes/(auth)/login'
import { Route as DemoFormIndexRouteImport } from './routes/demo/form/index'
import { Route as DemoTableTableRouteImport } from './routes/demo/table/table'
import { Route as DemoFormSimpleRouteImport } from './routes/demo/form/simple'
import { Route as DemoFormAddressRouteImport } from './routes/demo/form/address'

const HelloRoute = HelloRouteImport.update({
  id: '/hello',
  path: '/hello',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoIndexRoute = DemoIndexRouteImport.update({
  id: '/demo/',
  path: '/demo/',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoTanstackQueryRoute = DemoTanstackQueryRouteImport.update({
  id: '/demo/tanstack-query',
  path: '/demo/tanstack-query',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedUserlistRoute = AuthenticatedUserlistRouteImport.update({
  id: '/userlist',
  path: '/userlist',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedDashboardRoute = AuthenticatedDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedAboutformRoute = AuthenticatedAboutformRouteImport.update({
  id: '/aboutform',
  path: '/aboutform',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const authRegisterRoute = authRegisterRouteImport.update({
  id: '/(auth)/register',
  path: '/register',
  getParentRoute: () => rootRouteImport,
} as any)
const authLoginRoute = authLoginRouteImport.update({
  id: '/(auth)/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoFormIndexRoute = DemoFormIndexRouteImport.update({
  id: '/demo/form/',
  path: '/demo/form/',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoTableTableRoute = DemoTableTableRouteImport.update({
  id: '/demo/table/table',
  path: '/demo/table/table',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoFormSimpleRoute = DemoFormSimpleRouteImport.update({
  id: '/demo/form/simple',
  path: '/demo/form/simple',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoFormAddressRoute = DemoFormAddressRouteImport.update({
  id: '/demo/form/address',
  path: '/demo/form/address',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/hello': typeof HelloRoute
  '/login': typeof authLoginRoute
  '/register': typeof authRegisterRoute
  '/aboutform': typeof AuthenticatedAboutformRoute
  '/dashboard': typeof AuthenticatedDashboardRoute
  '/userlist': typeof AuthenticatedUserlistRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/demo': typeof DemoIndexRoute
  '/demo/form/address': typeof DemoFormAddressRoute
  '/demo/form/simple': typeof DemoFormSimpleRoute
  '/demo/table/table': typeof DemoTableTableRoute
  '/demo/form': typeof DemoFormIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/hello': typeof HelloRoute
  '/login': typeof authLoginRoute
  '/register': typeof authRegisterRoute
  '/aboutform': typeof AuthenticatedAboutformRoute
  '/dashboard': typeof AuthenticatedDashboardRoute
  '/userlist': typeof AuthenticatedUserlistRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/demo': typeof DemoIndexRoute
  '/demo/form/address': typeof DemoFormAddressRoute
  '/demo/form/simple': typeof DemoFormSimpleRoute
  '/demo/table/table': typeof DemoTableTableRoute
  '/demo/form': typeof DemoFormIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/hello': typeof HelloRoute
  '/(auth)/login': typeof authLoginRoute
  '/(auth)/register': typeof authRegisterRoute
  '/_authenticated/aboutform': typeof AuthenticatedAboutformRoute
  '/_authenticated/dashboard': typeof AuthenticatedDashboardRoute
  '/_authenticated/userlist': typeof AuthenticatedUserlistRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/demo/': typeof DemoIndexRoute
  '/demo/form/address': typeof DemoFormAddressRoute
  '/demo/form/simple': typeof DemoFormSimpleRoute
  '/demo/table/table': typeof DemoTableTableRoute
  '/demo/form/': typeof DemoFormIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/hello'
    | '/login'
    | '/register'
    | '/aboutform'
    | '/dashboard'
    | '/userlist'
    | '/demo/tanstack-query'
    | '/demo'
    | '/demo/form/address'
    | '/demo/form/simple'
    | '/demo/table/table'
    | '/demo/form'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/hello'
    | '/login'
    | '/register'
    | '/aboutform'
    | '/dashboard'
    | '/userlist'
    | '/demo/tanstack-query'
    | '/demo'
    | '/demo/form/address'
    | '/demo/form/simple'
    | '/demo/table/table'
    | '/demo/form'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/hello'
    | '/(auth)/login'
    | '/(auth)/register'
    | '/_authenticated/aboutform'
    | '/_authenticated/dashboard'
    | '/_authenticated/userlist'
    | '/demo/tanstack-query'
    | '/demo/'
    | '/demo/form/address'
    | '/demo/form/simple'
    | '/demo/table/table'
    | '/demo/form/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  HelloRoute: typeof HelloRoute
  authLoginRoute: typeof authLoginRoute
  authRegisterRoute: typeof authRegisterRoute
  DemoTanstackQueryRoute: typeof DemoTanstackQueryRoute
  DemoIndexRoute: typeof DemoIndexRoute
  DemoFormAddressRoute: typeof DemoFormAddressRoute
  DemoFormSimpleRoute: typeof DemoFormSimpleRoute
  DemoTableTableRoute: typeof DemoTableTableRoute
  DemoFormIndexRoute: typeof DemoFormIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/hello': {
      id: '/hello'
      path: '/hello'
      fullPath: '/hello'
      preLoaderRoute: typeof HelloRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/': {
      id: '/demo/'
      path: '/demo'
      fullPath: '/demo'
      preLoaderRoute: typeof DemoIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/tanstack-query': {
      id: '/demo/tanstack-query'
      path: '/demo/tanstack-query'
      fullPath: '/demo/tanstack-query'
      preLoaderRoute: typeof DemoTanstackQueryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/userlist': {
      id: '/_authenticated/userlist'
      path: '/userlist'
      fullPath: '/userlist'
      preLoaderRoute: typeof AuthenticatedUserlistRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/dashboard': {
      id: '/_authenticated/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthenticatedDashboardRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/aboutform': {
      id: '/_authenticated/aboutform'
      path: '/aboutform'
      fullPath: '/aboutform'
      preLoaderRoute: typeof AuthenticatedAboutformRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/(auth)/register': {
      id: '/(auth)/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof authRegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/login': {
      id: '/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/form/': {
      id: '/demo/form/'
      path: '/demo/form'
      fullPath: '/demo/form'
      preLoaderRoute: typeof DemoFormIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/table/table': {
      id: '/demo/table/table'
      path: '/demo/table/table'
      fullPath: '/demo/table/table'
      preLoaderRoute: typeof DemoTableTableRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/form/simple': {
      id: '/demo/form/simple'
      path: '/demo/form/simple'
      fullPath: '/demo/form/simple'
      preLoaderRoute: typeof DemoFormSimpleRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/form/address': {
      id: '/demo/form/address'
      path: '/demo/form/address'
      fullPath: '/demo/form/address'
      preLoaderRoute: typeof DemoFormAddressRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

interface AuthenticatedRouteChildren {
  AuthenticatedAboutformRoute: typeof AuthenticatedAboutformRoute
  AuthenticatedDashboardRoute: typeof AuthenticatedDashboardRoute
  AuthenticatedUserlistRoute: typeof AuthenticatedUserlistRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedAboutformRoute: AuthenticatedAboutformRoute,
  AuthenticatedDashboardRoute: AuthenticatedDashboardRoute,
  AuthenticatedUserlistRoute: AuthenticatedUserlistRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  HelloRoute: HelloRoute,
  authLoginRoute: authLoginRoute,
  authRegisterRoute: authRegisterRoute,
  DemoTanstackQueryRoute: DemoTanstackQueryRoute,
  DemoIndexRoute: DemoIndexRoute,
  DemoFormAddressRoute: DemoFormAddressRoute,
  DemoFormSimpleRoute: DemoFormSimpleRoute,
  DemoTableTableRoute: DemoTableTableRoute,
  DemoFormIndexRoute: DemoFormIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
